# CoTURN Configuration for The HIVE Translation System
# ULTRA-OPTIMIZED for UDP-first NAT traversal and <50ms relay latency
# Production-ready configuration with network resilience

# ============================================================================
# NETWORK CONFIGURATION - UDP-FIRST OPTIMIZATION
# ============================================================================

# Primary listening ports
listening-port=3478                  # Standard STUN/TURN port
tls-listening-port=5349             # TLS/DTLS port for secure connections

# Alternative listening ports for restrictive networks
alt-listening-port=80               # HTTP port fallback
alt-tls-listening-port=443          # HTTPS port fallback

# UDP optimization - CRITICAL for low latency
# Force UDP-first strategy to minimize latency
udp-self-balance                    # Distribute UDP load
no-tcp-relay                        # Disable TCP relay (adds latency)
no-tls                              # Disable TLS for internal network (development)

# Port allocation for relay connections
# Optimized range to avoid conflicts with LiveKit
min-port=49152
max-port=49252                      # 100 ports should be sufficient

# ============================================================================
# SERVER IDENTITY AND REALM
# ============================================================================

server-name=${COTURN_SERVER_NAME:-turn.thehive.local}
realm=${COTURN_REALM:-thehive}

# ============================================================================
# AUTHENTICATION - PRODUCTION SECURITY
# ============================================================================

# Use long-term credential mechanism for production
lt-cred-mech

# Static users for development (replace with database in production)
user=${TURN_USERNAME:-hiveuser}:${TURN_CREDENTIAL:-hivepass}
user=${TRANSLATOR_USER:-translator}:${TRANSLATOR_PASS:-translatorpass}
user=${ADMIN_USER:-admin}:${ADMIN_PASS:-adminpass123}

# Dynamic authentication using shared secret (recommended for production)
use-auth-secret
static-auth-secret=${TURN_SECRET_KEY:-your-ultra-secure-secret-key-change-in-production}

# REST API authentication for dynamic credential generation
rest-api-secret=${REST_API_SECRET:-rest-api-secret-change-me}

# ============================================================================
# NETWORK INTERFACES AND IP CONFIGURATION
# ============================================================================

# Listening interfaces (bind to all interfaces)
listening-ip=0.0.0.0
listening-ip=::0                    # IPv6 support

# Relay interfaces (specify your server's IP addresses)
relay-ip=${RELAY_IP:-127.0.0.1}    # Internal IP
external-ip=${EXTERNAL_IP}         # Public IP (set in production)

# Network optimization for containers
no-loopback-peers                   # Security: block loopback
no-multicast-peers                  # Security: block multicast

# ============================================================================
# PERFORMANCE OPTIMIZATION FOR LOW LATENCY
# ============================================================================

# Session and allocation timeouts - AGGRESSIVE for low latency
channel-lifetime=300                # 5 minutes (reduced from 600)
permission-lifetime=180             # 3 minutes (reduced from 300)
stale-nonce=300                     # 5 minutes nonce lifetime

# Allocation timeouts optimized for voice calls
max-allocate-lifetime=1800          # 30 minutes max session
max-allocate-timeout=30             # 30s allocation timeout (reduced)
default-allocate-lifetime=600       # 10 minutes default

# Connection limits per session (conservative for quality)
max-allocate-session-lifetime=86400 # 24 hours max
total-quota=50                      # Total simultaneous sessions
user-quota=10                       # Per-user session limit

# Bandwidth management - GENEROUS for voice translation
bps-capacity=0                      # Unlimited bandwidth
stale-nonce=300

# ============================================================================
# PROTOCOL OPTIMIZATION
# ============================================================================

# Mobility support for mobile devices
mobility

# Fingerprinting for WebRTC compatibility
fingerprint

# STUN binding optimization
stun-only                           # Allow STUN-only requests for faster ICE

# ============================================================================
# SECURITY HARDENING
# ============================================================================

# Secure STUN (require authentication)
secure-stun

# Origin-based security (restrict to known domains)
allowed-peer-ip=127.0.0.1
allowed-peer-ip=::1
# Add your application server IPs here
# allowed-peer-ip=10.0.0.0/8        # Private networks
# allowed-peer-ip=172.16.0.0/12
# allowed-peer-ip=192.168.0.0/16

# Denied peer networks (security)
denied-peer-ip=0.0.0.0-0.255.255.255      # Block entire IPv4 space except allowed
denied-peer-ip=::0-::ffff:ffff:ffff:ffff  # Block IPv6 except allowed

# ============================================================================
# TLS/DTLS CONFIGURATION
# ============================================================================

# Certificate files for TLS (generate or use Let's Encrypt)
cert=${COTURN_CERT_FILE:-/etc/coturn/certs/turn_server_cert.pem}
pkey=${COTURN_KEY_FILE:-/etc/coturn/certs/turn_server_pkey.pem}
ca-file=${COTURN_CA_FILE:-/etc/coturn/certs/ca_cert.pem}

# Cipher suites (modern, secure, fast)
cipher-list="ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS:!3DES"
ec-curve-name=prime256v1             # Fast elliptic curve

# DH parameters file for perfect forward secrecy
dh2066                              # Use built-in 2066-bit DH params (faster than 4096)

# ============================================================================
# LOGGING AND MONITORING
# ============================================================================

# Logging configuration
log-file=/var/log/coturn/turnserver.log
simple-log                          # Simple log format
verbose                             # Verbose logging for debugging

# Syslog integration
syslog                              # Enable syslog
facility=local0                     # Syslog facility

# Statistics and monitoring
log-binding                         # Log binding requests
no-stdout-log                       # Don't log to stdout (use file/syslog)

# Bandwidth monitoring
log-bandwidth                       # Log bandwidth usage
bps-capacity-notification           # Notify on bandwidth limits

# ============================================================================
# PROCESS MANAGEMENT
# ============================================================================

# PID file
pidfile=/var/run/turnserver.pid

# Run as daemon
daemon

# User and group (security)
proc-user=turnserver
proc-group=turnserver

# ============================================================================
# DATABASE CONFIGURATION (Optional - for user persistence)
# ============================================================================

# PostgreSQL database for user management (uncomment for production)
# psql-userdb="host=${DB_HOST:-localhost} port=${DB_PORT:-5432} dbname=${DB_NAME:-coturn} user=${DB_USER:-coturn} password=${DB_PASS:-password} connect_timeout=30"

# Redis database for session state (recommended for clustering)
redis-userdb="host=${REDIS_HOST:-redis} port=${REDIS_PORT:-6379} dbname=${REDIS_DB:-1} password=${REDIS_PASS} connect_timeout=10"

# ============================================================================
# WEB ADMIN INTERFACE
# ============================================================================

# Web admin interface for monitoring
web-admin
web-admin-port=8080
web-admin-ip=127.0.0.1              # Local access only
web-admin-listen-on-workers         # Enable on worker processes

# ============================================================================
# CLI AND TELNET INTERFACES
# ============================================================================

# Disable CLI for security
no-cli

# Telnet admin interface (disable in production)
# cli-port=5766
# cli-ip=127.0.0.1

# ============================================================================
# ADVANCED PERFORMANCE TUNING
# ============================================================================

# Worker processes (multi-core support)
# Uncomment for high-load production deployments
# proc-num-threads=4                # Number of worker threads

# Memory optimization
# max-bps=1000000                   # Max bits per second per session

# Network buffer optimization
socket-recv-buffer-size=1048576     # 1MB receive buffer
socket-send-buffer-size=1048576     # 1MB send buffer

# ============================================================================
# INTEGRATION WITH LIVEKIT
# ============================================================================

# OAuth integration (for enterprise deployments)
# oauth
# oauth-server-name=https://auth.thehive.app

# TURN REST API for dynamic credentials
rest-api

# Enable prometheus metrics endpoint
prometheus
prometheus-port=9091
prometheus-ip=0.0.0.0

# Health check endpoint
health-check
health-check-port=8079

# ============================================================================
# DEVELOPMENT/DEBUGGING OPTIONS
# ============================================================================

# Enable extra debugging (disable in production)
# Verbose2                          # Extra verbose logging
# log-file=/var/log/coturn/debug.log

# Production optimization flags
# no-udp                            # Force TCP (not recommended)
# no-dtls                           # Disable DTLS (not recommended)
# no-tls                            # Disable TLS (development only)

# ============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ============================================================================

# Include additional configuration files
# include=/etc/coturn/local.conf    # Local overrides
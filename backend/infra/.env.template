# The HIVE LiveKit SFU Infrastructure Environment Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# DEPLOYMENT ENVIRONMENT
# ============================================================================
ENVIRONMENT=development             # development, staging, production
NODE_ENV=development
DEBUG_MODE=true

# ============================================================================
# LIVEKIT SFU CONFIGURATION
# ============================================================================

# LiveKit Server Configuration
LIVEKIT_API_KEY=devkey             # CHANGE IN PRODUCTION - min 16 chars
LIVEKIT_SECRET_KEY=devsecret       # CHANGE IN PRODUCTION - min 32 chars
LIVEKIT_URL=ws://localhost:7880
LIVEKIT_WS_URL=ws://localhost:7880
LIVEKIT_HTTP_URL=http://localhost:7880

# LiveKit Server Settings
MEMORY_LIMIT=2GB                   # Adjust based on server capacity
LOG_LEVEL=info                     # debug, info, warn, error
NODE_IP=127.0.0.1                  # Server IP for clustering
NODE_REGION=local                  # Region identifier

# Room Configuration
DEFAULT_ROOM_TTL=3600              # Default room timeout (seconds)
MAX_PARTICIPANTS_PER_ROOM=12       # Optimized for translation workload

# ============================================================================
# COTURN (STUN/TURN) SERVER CONFIGURATION  
# ============================================================================

# CoTURN Server Settings
TURN_SERVER_HOST=coturn            # Docker service name (or IP)
TURN_USERNAME=hiveuser             # CHANGE IN PRODUCTION
TURN_CREDENTIAL=hivepass           # CHANGE IN PRODUCTION
COTURN_REALM=thehive
COTURN_SERVER_NAME=turn.thehive.local

# CoTURN Authentication (choose one method)
# Method 1: Static credentials (development)
TRANSLATOR_USER=translator
TRANSLATOR_PASS=translatorpass
ADMIN_USER=admin
ADMIN_PASS=adminpass123

# Method 2: Dynamic credentials (production - recommended)
TURN_SECRET_KEY=your-ultra-secure-secret-key-change-in-production
REST_API_SECRET=rest-api-secret-change-me

# CoTURN Network Configuration
RELAY_IP=127.0.0.1                 # Internal server IP
EXTERNAL_IP=                       # Public IP (required for production)

# CoTURN TLS Configuration
COTURN_CERT_FILE=/etc/coturn/certs/turn_server_cert.pem
COTURN_KEY_FILE=/etc/coturn/certs/turn_server_pkey.pem
COTURN_CA_FILE=/etc/coturn/certs/ca_cert.pem

# ============================================================================
# JWT AUTHENTICATION SERVICE
# ============================================================================

# JWT Configuration
JWT_ISSUER=thehive-sfu
JWT_DEFAULT_TTL_HOURS=6            # Default token validity
JWT_MAX_TTL_HOURS=24               # Maximum token validity
JWT_ALGORITHM=HS256

# Auth Service API Key (for securing the JWT generation endpoint)
AUTH_SERVICE_API_KEY=              # Generate a secure random key

# ============================================================================
# TRANSLATION SERVICES CONFIGURATION
# ============================================================================

# Service URLs (internal Docker network)
STT_SERVICE_URL=ws://stt-service:8000/ws/transcribe
MT_SERVICE_URL=ws://mt-service:8001/ws/translate  
TTS_SERVICE_URL=ws://tts-service:8002/ws/synthesize
AUTH_SERVICE_URL=http://auth-service:8003

# Translation Settings
TARGET_LANGUAGES=es,fr,de,it,pt,ar,zh,ja,ko,ru
DEFAULT_SOURCE_LANGUAGE=en
STT_MODEL=base                     # whisper model size: tiny, base, small, medium, large
STT_DEVICE=auto                    # auto, cpu, cuda

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis Settings (for LiveKit state and session management)
REDIS_URL=redis://redis:6379
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASS=                        # Leave empty for no password

# Redis for CoTURN (different DB to avoid conflicts)
REDIS_COTURN_DB=1

# ============================================================================
# DATABASE CONFIGURATION (Optional - for persistent user management)
# ============================================================================

# PostgreSQL for CoTURN user database (optional)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=coturn
DB_USER=coturn
DB_PASS=password

# ============================================================================
# MONITORING AND OBSERVABILITY  
# ============================================================================

# Prometheus
PROMETHEUS_PORT=9090
ENABLE_METRICS=true

# Grafana
GRAFANA_PASSWORD=admin123          # CHANGE IN PRODUCTION
GRAFANA_PORT=3001

# Jaeger Tracing
JAEGER_ENDPOINT=http://jaeger:14268
ENABLE_TRACING=true

# Webhook Configuration (for room lifecycle events)
WEBHOOK_URL=http://translator-worker:8080/webhook

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,http://localhost:3000,https://thehive.app

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=500
RATE_LIMIT_BURST=50

# API Keys and Secrets
ADMIN_API_KEY=                     # Generate secure random key for admin endpoints

# ============================================================================
# RECORDING AND STORAGE (Optional)
# ============================================================================

# Recording Configuration
ENABLE_RECORDING=false
RECORDING_OUTPUT_DIR=/data/recordings
RECORDING_SEGMENT_DURATION=300     # seconds

# Storage Configuration
STORAGE_TYPE=local                 # local, s3, gcs
# S3_BUCKET=                       # If using S3 storage
# S3_ACCESS_KEY=
# S3_SECRET_KEY=
# S3_REGION=

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================

# CPU and Memory Limits
MAX_CPUS=0                         # 0 = use all available
MAX_MEMORY=2048                    # MB

# Connection Limits
MAX_CONNECTIONS_PER_IP=20
MAX_ROOMS_PER_NODE=50
MAX_WORKERS_PER_ROOM=2

# Audio Processing
AUDIO_CHUNK_SIZE_MS=250            # Audio processing chunk size
AUDIO_SAMPLE_RATE=48000            # Audio sample rate
ENABLE_NOISE_SUPPRESSION=false     # Handle client-side for lower latency

# Network Optimization
UDP_PORT_RANGE_START=50000
UDP_PORT_RANGE_END=50199
ICE_GATHERING_TIMEOUT=3            # seconds
CONNECTION_TIMEOUT=8               # seconds

# ============================================================================
# DEVELOPMENT AND DEBUGGING
# ============================================================================

# Development Mode Settings (disable in production)
ENABLE_DEBUG_ENDPOINTS=true
ENABLE_CORS_ALL_ORIGINS=false      # Only enable for local development
DISABLE_RATE_LIMITING=false        # Only disable for testing

# Logging Configuration
LOG_FORMAT=json                    # json, text
LOG_SAMPLING_RATE=0.1              # 10% sampling for performance

# Test Mode (for automated testing)
TEST_MODE=false
MOCK_TRANSLATION_SERVICES=false

# ============================================================================
# PRODUCTION DEPLOYMENT OVERRIDES
# ============================================================================

# SSL/TLS Configuration
SSL_CERT_PATH=/etc/ssl/certs/thehive.crt
SSL_KEY_PATH=/etc/ssl/private/thehive.key
ENABLE_SSL=false

# Domain Configuration  
PRIMARY_DOMAIN=thehive.app
API_DOMAIN=api.thehive.app
TURN_DOMAIN=turn.thehive.app

# CDN Configuration
CDN_URL=https://cdn.thehive.app
STATIC_ASSETS_URL=https://assets.thehive.app

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30           # seconds
HEALTH_CHECK_TIMEOUT=5             # seconds

# Backup and Recovery
BACKUP_ENABLED=false
BACKUP_INTERVAL=3600               # seconds
BACKUP_RETENTION_DAYS=30

# ============================================================================
# EXAMPLE VALUES FOR QUICK SETUP
# ============================================================================

# Quick Development Setup:
# 1. Copy this file to .env
# 2. Generate secure keys:
#    - LIVEKIT_API_KEY=$(openssl rand -hex 16)
#    - LIVEKIT_SECRET_KEY=$(openssl rand -hex 32) 
#    - AUTH_SERVICE_API_KEY=$(openssl rand -hex 32)
#    - TURN_SECRET_KEY=$(openssl rand -hex 32)
# 3. Set ENVIRONMENT=development
# 4. Run: docker-compose up -d

# Production Setup:
# 1. Set ENVIRONMENT=production
# 2. Configure all CHANGE_IN_PRODUCTION values
# 3. Set proper domain names and SSL certificates
# 4. Configure external IP addresses
# 5. Set up proper monitoring and alerting
# 6. Configure backup and recovery procedures
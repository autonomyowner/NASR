# NGINX Configuration for The HIVE Translation System
# Optimized for WebSocket proxying and low latency

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
        
    # WebSocket upgrade headers
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream definitions
    upstream livekit {
        server livekit:7880;
        keepalive 16;
    }
    
    upstream stt-service {
        server stt-service:8000;
        keepalive 16;
    }
    
    upstream mt-service {
        server mt-service:8001;
        keepalive 16;
    }
    
    upstream tts-service {
        server tts-service:8002;
        keepalive 16;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ws:10m rate=5r/s;
    
    # Main server block
    server {
        listen 80;
        server_name localhost thehive.local;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # LiveKit WebSocket and HTTP
        location /livekit/ {
            proxy_pass http://livekit/;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts optimized for real-time
            proxy_connect_timeout 1s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings for low latency
            proxy_buffering off;
            proxy_cache off;
            
            # Rate limiting
            limit_req zone=ws burst=20 nodelay;
        }
        
        # STT Service WebSocket
        location /api/stt/ {
            proxy_pass http://stt-service/;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Low latency settings
            proxy_connect_timeout 1s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;
            
            # Rate limiting for API
            limit_req zone=api burst=50 nodelay;
        }
        
        # MT Service WebSocket  
        location /api/mt/ {
            proxy_pass http://mt-service/;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Optimized timeouts
            proxy_connect_timeout 1s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            proxy_buffering off;
            
            limit_req zone=api burst=100 nodelay;
        }
        
        # TTS Service WebSocket
        location /api/tts/ {
            proxy_pass http://tts-service/;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # TTS can take longer
            proxy_connect_timeout 1s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;
            
            limit_req zone=api burst=30 nodelay;
        }
        
        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Metrics endpoint (internal only)
        location /metrics {
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
            
            proxy_pass http://livekit/metrics;
            proxy_set_header Host $host;
        }
        
        # Frontend (served by Vite dev server or static files)
        location / {
            # In production, serve static files
            # In development, proxy to Vite dev server
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }
    
    # HTTPS server (for production)
    server {
        listen 443 ssl http2;
        server_name thehive.app www.thehive.app;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # SSL session caching
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;
        
        # Same location blocks as HTTP server
        # ... (repeat all location blocks from above)
        
        # Redirect HTTP to HTTPS
        error_page 497 https://$server_name$request_uri;
    }
}

# Stream block for TCP/UDP proxying (for TURN server)
stream {
    upstream coturn_udp {
        server coturn:3478;
    }
    
    upstream coturn_tcp {
        server coturn:3478;
    }
    
    server {
        listen 3478 udp;
        proxy_pass coturn_udp;
        proxy_timeout 1s;
        proxy_responses 1;
    }
    
    server {
        listen 3478;
        proxy_pass coturn_tcp;
        proxy_timeout 1s;
    }
}